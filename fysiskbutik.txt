//// -- LEVEL 1
//// -- Tables and References
// 
// Creating tables
Table Customers {
  customer_id varchar [pk]
  phone int
  full_name varchar
}

Table Membership {
  customer_id varchar [ref: - Customers.customer_id]
  member_id varchar [pk]
}

Table Staffs {
  staff_id varchar [pk]
  store_id varchar
  full_name varchar
  position varchar
  shift_start time
  shift_end time
}

Table Orders {
  order_id varchar [pk]
  customer_id varchar [ref: - Customers.customer_id]
  order_date time
  staff_id varchar [ref: - Staffs.staff_id]
  store_id varchar
  shipped_date time 
 }
 
Table Stores {
  store_id varchar [pk, ref: - Staffs.store_id]
  city varchar
  street varchar
 }
 
Table Items {
  order_id varchar [pk, ref: - Orders.order_id]
  item_id varchar [pk]
  product_id varchar
  quantity int
  price float
}

Table Products {
  product_id varchar [pk, ref: - Items.product_id]
  category_id varchar
  price float
  product_date time
}

Table Stocks {
  store_id varchar [pk, ref: - Stores.store_id]
  product_id varchar [pk, ref: - Products.product_id]
  quantity int
}

Table Categories {
  category_id varchar [pk, ref: - Products.product_id]
  category varchar
}
 

// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one
// [ref: > CUS.customer_id]

//----------------------------------------------//

//// -- LEVEL 2
//// -- Adding column settings

//Table order_items {
//  order_id int [ref: > orders.id]
//  product_id int    
//  quantity int [default: 1] // default value
//}

//Ref: order_items.product_id > products.id

//Table orders {
//  id int [pk] // primary key
//  user_id int [not null, unique]
//  status varchar
//  created_at varchar [note: 'When order created'] // add column note
//}

//----------------------------------------------//

//// -- Level 3 
//// -- Enum, Indexes

// Enum for 'products' table below
//Enum products_status {
//  out_of_stock
//  in_stock
//  running_low [note: 'less than 20'] // add column note
//}

// Indexes: You can define a single or multi-column index 
//Table products {
//  id int [pk]
//  name varchar
////  merchant_id int [not null]
//  price int
//  status products_status
//  created_at datetime [default: `now()`]
  
//  Indexes {
//    (merchant_id, status) [name:'product_status']
//    id [unique]
//  }
//}

//Ref: products.merchant_id > merchants.id // many-to-one
